/*
 * This file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 *
 * Detailed information about configuring a multi-project build in Gradle can be found
 * in the user manual at https://docs.gradle.org/7.4.2/userguide/multi_project_builds.html
 */
pluginManagement {
    repositories {
        mavenLocal()
        gradlePluginPortal()
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/AxenAPI/axenapi-library")
            credentials.setUsername(getProperties().get("gpr.user") ?: System.getenv("GITHUB_USER"))
            credentials.setPassword(getProperties().get("gpr.user") ?: System.getenv("GITHUB_TOKEN"))
        }
        maven {
            name = "GitHubPackages-plugin"
            url = uri("https://maven.pkg.github.com/AxenAPI/axenapi-gradle-plugin")
            credentials.setUsername(getProperties().get("gpr.user") ?: System.getenv("GITHUB_USER"))
            credentials.setPassword(getProperties().get("gpr.user") ?: System.getenv("GITHUB_TOKEN"))
        }
        maven {
            name = "GitHubPackages-gen"
            url = uri("https://maven.pkg.github.com/AxenAPI/axenapi-generator")
            credentials.setUsername(getProperties().get("gpr.user") ?: System.getenv("GITHUB_USER"))
            credentials.setPassword(getProperties().get("gpr.user") ?: System.getenv("GITHUB_TOKEN"))
        }
    }
}

dependencyResolutionManagement {
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/AxenAPI/axenapi-library")
            credentials.setUsername(getProperties().get("gpr.user") ?: System.getenv("GITHUB_USER"))
            credentials.setPassword(getProperties().get("gpr.user") ?: System.getenv("GITHUB_TOKEN"))
        }
        maven {
            name = "GitHubPackages-plugin"
            url = uri("https://maven.pkg.github.com/AxenAPI/axenapi-gradle-plugin")
            credentials.setUsername(getProperties().get("gpr.user") ?: System.getenv("GITHUB_USER"))
            credentials.setPassword(getProperties().get("gpr.user") ?: System.getenv("GITHUB_TOKEN"))
        }
        maven {
            name = "GitHubPackages-gen"
            url = uri("https://maven.pkg.github.com/AxenAPI/axenapi-generator")
            credentials.setUsername(getProperties().get("gpr.user") ?: System.getenv("GITHUB_USER"))
            credentials.setPassword(getProperties().get("gpr.user") ?: System.getenv("GITHUB_TOKEN"))
        }
    }
}

rootProject.name = 'demo'
include 'axenapilibspringboot2'
include 'axenapilibspringboot3'
include 'axenapigeneratorclientspringboot2'
include 'axenapigeneratorserverspringboot2'
include 'axenapigeneratorclientspringboot3'
include 'axenapigeneratorserverspringboot3'