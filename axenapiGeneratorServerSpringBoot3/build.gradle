plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'pro.axenix-innovation.axenapi-generator' version '1.0.2-SNAPSHOT'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'

    // https://mvnrepository.com/artifact/org.openapitools/jackson-databind-nullable
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'

    //	swagger for kafka
    annotationProcessor "pro.axenix-innovation:axenapi-spring6:1.0.1-SNAPSHOT"
    implementation ("pro.axenix-innovation:axenapi-spring6:1.0.1-SNAPSHOT")

}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDirs '/build/src/main/java'
        }
        resources {
            srcDir '/build/src/main/resources'
        }
    }
}
// generate listeners
codegenData {
    openApiPath =  getProjectDir().getAbsolutePath() + '/src/main/resources/joker.json'
    outDir = getProjectDir().getAbsolutePath() + '/build'
    srcDir = 'src/main/java'
    listenerPackage = 'axenapi.generated'
    modelPackage = 'axenapi.generated.model'
    kafkaClient = false
    interfaceOnly = false
    useSpring3 = true
    //resultWrapper = 'java.util.concurrent.CompletableFuture'
}

compileJava {
    dependsOn "generateKafka"
}