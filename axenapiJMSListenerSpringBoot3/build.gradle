plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'pro.axenix-innovation.axenapi.generator' version('1.0.25-SNAPSHOT')
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

sourceSets {
    main {
        java {
            srcDir '/build/src/main/java'
        }
        resources {
            srcDir '/build/src/main/resources'
        }
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    annotationProcessor 'pro.axenix-innovation:axenapi-spring6:1.0.24-SNAPSHOT'
    implementation 'pro.axenix-innovation:axenapi-spring6:1.0.24-SNAPSHOT'

    implementation 'org.springframework.boot:spring-boot-starter-artemis'
    implementation group: 'org.openapitools', name: 'jackson-databind-nullable', version: '0.2.6'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

compileJava {
    dependsOn "generateKafka"
}

// for axenapi
codegenData {   // server
    openApiPath =  getProjectDir().getAbsolutePath() + '/src/main/resources/api.json'
    outDir = getProjectDir().getAbsolutePath() + '/build'
    srcDir = 'src/main/java'
    listenerPackage = 'axenapi.listener'
    modelPackage = 'axenapi.model'
    kafkaClient = false
//    resultWrapper = 'java.util.concurrent.CompletableFuture'
    useSpring3 = true
}