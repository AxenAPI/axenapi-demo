{
  "openapi": "3.0.1",
  "info": {
    "title": "front-adapter",
    "version": "1.0.43-26a8758c6dad95c99f98b219d4fc5d55-1685094670-SNAPSHOT"
  },
  "servers": [
    {
      "url": "http://localhost:8081",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/kafka/front-adapter-group-local/SaveContractParametersRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Метод сохранения выбранных из одобренных параметров кредита",
        "operationId": "executeSaveContractParametersRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveContractParametersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ SaveContractParametersResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SaveContractParametersResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/SaveAccountsRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Метод сохранения выбранных счетов",
        "operationId": "executeSaveAccountsRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAccountsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ SaveAccountsResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAccountsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/RequestGetApplicationDecisions": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Получение общих решений по заявке",
        "operationId": "executeRequestGetApplicationDecisions",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestGetApplicationDecisions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ ResponseGetApplicationDecisions в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetApplicationDecisions"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/OfferSelectionReturnRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Метод возврата заявки на выбор предложения",
        "operationId": "executeOfferSelectionReturnRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfferSelectionReturnRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ OfferSelectionReturnResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OfferSelectionReturnResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/GetOffersRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Метод получения одобренных предложений по номеру заявки",
        "operationId": "executeGetOffersRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetOffersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ GetOffersResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetOffersResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/GetInteractionDataRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Получение информации о межсистемных взаимодействиях",
        "operationId": "executeGetInteractionDataRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetInteractionDataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ GetInteractionDataResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetInteractionDataResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/GetIntCreditHistoryRawRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Получение данных по внутренней кредитной истории",
        "operationId": "executeGetIntCreditHistoryRawRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetIntCreditHistoryRawRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ GetIntCreditHistoryRawResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetIntCreditHistoryRawResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/GetExtCreditHistoryRawRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Получение данных по внешней кредитной истории",
        "operationId": "executeGetExtCreditHistoryRawRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetExtCreditHistoryRawRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ GetExtCreditHistoryRawResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetExtCreditHistoryRawResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/GetCreditHistoryFinalRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Получение дедуплицированной КИ",
        "operationId": "executeGetCreditHistoryFinalRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreditHistoryFinalRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ GetCreditHistoryFinalResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreditHistoryFinalResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/GetBusinessEventsRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Получение списка событий по заявке",
        "operationId": "executeGetBusinessEventsRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetBusinessEventsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ GetBusinessEventsResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetBusinessEventsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/GetAccountsByParticipantIdRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Метод получения данных по счетам клиентов по идентификатору клиента",
        "operationId": "executeGetAccountsByParticipantIdRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAccountsByParticipantIdRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ GetAccountsByParticipantIdResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountsByParticipantIdResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/GetAccountsByAppNumRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Метод получения данных по счетам клиентов по номеру заявки",
        "operationId": "executeGetAccountsByAppNumRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAccountsByAppNumRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ GetAccountsByAppNumResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountsByAppNumResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/CreateAccountRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Метод создания счета",
        "operationId": "executeCreateAccountRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ CreateAccountResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAccountResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/AppLoanUpdateRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Метод обновления заявки",
        "operationId": "executeAppLoanUpdateRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppLoanUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ AppLoanUpdateResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AppLoanUpdateResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/AppLoanTransferringRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Метод отправки заявки на выдачу",
        "operationId": "executeAppLoanTransferringRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppLoanTransferringRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ AppLoanTransferringResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AppLoanTransferringResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/AppLoanSigningRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Метод отправки заявки на подписание договора",
        "operationId": "executeAppLoanSigningRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppLoanSigningRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ AppLoanSigningResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AppLoanSigningResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/AppLoanProcessingRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Метод по отправке заявки в обработку",
        "operationId": "executeAppLoanProcessingRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppLoanProcessingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ AppLoanProcessingResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AppLoanProcessingResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/AppLoanListRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Метод поиска заявок по заданным фильтрам",
        "operationId": "executeAppLoanListRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppLoanListRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ AppLoanListResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AppLoanListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/AppLoanGetRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Метод поиска заявки",
        "operationId": "executeAppLoanGetRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppLoanGetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ AppLoanGetResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AppLoanGetResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/AppLoanDeclineRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Метод перевода заявки в отказ",
        "operationId": "executeAppLoanDeclineRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppLoanDeclineRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ AppLoanDeclineResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AppLoanDeclineResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/AppLoanCreateRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Метод создания заявки",
        "operationId": "executeAppLoanCreateRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppLoanCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ AppLoanCreateResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AppLoanCreateResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/kafka/front-adapter-group-local/AppLoanAuditGetRequest": {
      "post": {
        "tags": [
          "group-kafka-listener-controller"
        ],
        "description": "Получение данных по заявке с отказами для аудита",
        "operationId": "executeAppLoanAuditGetRequest",
        "parameters": [
          {
            "name": "MESSAGE_ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kafka_replyTopic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppLoanAuditGetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Возвращает ответ AppLoanAuditGetResponse в топик, передаваемый через хедер replyTopic. Возвращаемое значение не перехватывается",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AppLoanAuditGetResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Internal-Token": []
          }
        ]
      }
    },
    "/dictionary/cache/state": {
      "get": {
        "tags": [
          "cache-state-controller"
        ],
        "operationId": "getCacheState",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/Dictionary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dictionary/cache/invalidate": {
      "delete": {
        "tags": [
          "cache-state-controller"
        ],
        "operationId": "invalidateCache",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdditionalProduct": {
        "required": [
          "additionalProductCode",
          "id",
          "modifyType"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "modifyType": {
            "type": "string",
            "enum": [
              "CREATE",
              "UPDATE",
              "PATCH",
              "DELETE",
              "DELETE_ALL"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "partnerCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "additionalProductCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "term": {
            "type": "number"
          },
          "discount": {
            "type": "number"
          }
        }
      },
      "Application": {
        "required": [
          "applicationNumber",
          "creditParameters",
          "source"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "applicationNumber": {
            "type": "string"
          },
          "creditParameters": {
            "$ref": "#/components/schemas/CreditParameters"
          },
          "source": {
            "$ref": "#/components/schemas/Source"
          }
        }
      },
      "CreditParameters": {
        "required": [
          "id",
          "matrixId",
          "modifyType",
          "productTypeCode",
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "modifyType": {
            "type": "string",
            "enum": [
              "CREATE",
              "UPDATE",
              "PATCH",
              "DELETE",
              "DELETE_ALL"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "typeCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "productTypeCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "productCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "purposeCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "currencyCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "term": {
            "type": "number"
          },
          "rate": {
            "type": "number"
          },
          "paymentTypeCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "handAmount": {
            "type": "number"
          },
          "monthlyPayment": {
            "type": "number"
          },
          "insurance": {
            "type": "boolean"
          },
          "matrixId": {
            "type": "string",
            "format": "uuid"
          },
          "firstPaymentDate": {
            "type": "string",
            "format": "date"
          },
          "pricingConditionsId": {
            "type": "string",
            "format": "uuid"
          },
          "insuranceParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InsuranceParameter"
            }
          },
          "additionalProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalProduct"
            }
          }
        }
      },
      "InsuranceParameter": {
        "required": [
          "amount",
          "id",
          "insuranceCompanyCode",
          "insuranceProductTypeCode",
          "insuranceRate",
          "modifyType"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "modifyType": {
            "type": "string",
            "enum": [
              "CREATE",
              "UPDATE",
              "PATCH",
              "DELETE",
              "DELETE_ALL"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "insuranceCompanyCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "insuranceProductTypeCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "insuranceRate": {
            "type": "number"
          },
          "discount": {
            "type": "number"
          }
        }
      },
      "SaveContractParametersRequest": {
        "required": [
          "application"
        ],
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/Application"
          }
        }
      },
      "Source": {
        "required": [
          "channelCode",
          "sourceSystemCode"
        ],
        "type": "object",
        "properties": {
          "sourceSystemCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "channelCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "branchUnitCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "Error": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "businessCode": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Meta": {
        "type": "object",
        "properties": {
          "actualDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "faultSource": {
            "type": "string"
          }
        }
      },
      "SaveContractParametersResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/SaveContractParametersResult"
          }
        }
      },
      "SaveContractParametersResult": {
        "required": [
          "application"
        ],
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/Application"
          }
        }
      },
      "Warning": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "Account": {
        "required": [
          "classCode",
          "number",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "number": {
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "currencyCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "classCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "typeCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "isNew": {
            "type": "boolean"
          },
          "balance": {
            "type": "number"
          }
        }
      },
      "SaveAccountsRequest": {
        "required": [
          "accounts",
          "applicationNumber",
          "participantId"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          },
          "participantId": {
            "type": "string",
            "format": "uuid"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          }
        }
      },
      "SaveAccountsResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/SaveAccountsResult"
          }
        }
      },
      "SaveAccountsResult": {
        "required": [
          "accounts",
          "applicationNumber",
          "participantId"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          },
          "participantId": {
            "type": "string",
            "format": "uuid"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          }
        }
      },
      "RequestGetApplicationDecisions": {
        "required": [
          "applicationNumber"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          }
        }
      },
      "ApplicationDecision": {
        "required": [
          "body",
          "date",
          "id",
          "scoringTypeCode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "scoringTypeCode": {
            "type": "string"
          },
          "decision": {
            "$ref": "#/components/schemas/Decision"
          },
          "creditLimit": {
            "$ref": "#/components/schemas/CreditLimit"
          },
          "scoringResult": {
            "$ref": "#/components/schemas/ScoringResult"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "body": {
            "type": "string"
          }
        }
      },
      "ApplicationDecisionInfo": {
        "required": [
          "applicationNumber"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          },
          "decisions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationDecision"
            }
          }
        }
      },
      "CreditLimit": {
        "required": [
          "approvedCreditLimit",
          "monthlyPayment",
          "term"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "approvedCreditLimit": {
            "type": "number"
          },
          "monthlyPayment": {
            "type": "number"
          },
          "term": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Decision": {
        "required": [
          "decisionType"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "decisionType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "rejectionReasonCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ResponseGetApplicationDecisions": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/ApplicationDecisionInfo"
          }
        }
      },
      "ScoringResult": {
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "score": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "creditHistoryAssessment": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "OfferSelectionReturnRequest": {
        "required": [
          "applicationNumber",
          "source"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/Source"
          }
        }
      },
      "OfferSelectionReturnResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/OfferSelectionReturnResult"
          }
        }
      },
      "OfferSelectionReturnResult": {
        "required": [
          "applicationNumber",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          }
        }
      },
      "GetOffersRequest": {
        "required": [
          "applicationNumber"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          }
        }
      },
      "GetOffersResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/GetOffersResult"
          }
        }
      },
      "GetOffersResult": {
        "type": "object",
        "properties": {
          "offers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatrixOffer"
            }
          }
        }
      },
      "MatrixOffer": {
        "required": [
          "applicationNumber",
          "decisionId",
          "id",
          "interestRate",
          "maxApprovedCreditAmount",
          "maxCreditTerm",
          "minApprovedCreditAmount",
          "minCreditTerm",
          "paymentTypeCode",
          "productCode",
          "productTypeCode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "applicationNumber": {
            "type": "string"
          },
          "decisionId": {
            "type": "string",
            "format": "uuid"
          },
          "productTypeCode": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "insurance": {
            "type": "boolean"
          },
          "maxApprovedCreditAmount": {
            "type": "number"
          },
          "minApprovedCreditAmount": {
            "type": "number"
          },
          "interestRate": {
            "type": "number"
          },
          "maxCreditTerm": {
            "type": "number"
          },
          "minCreditTerm": {
            "type": "number"
          },
          "currencyCode": {
            "type": "string"
          },
          "paymentTypeCode": {
            "type": "string"
          },
          "insuranceParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InsuranceParameter"
            }
          },
          "additionalProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalProduct"
            }
          }
        }
      },
      "GetInteractionDataRequest": {
        "required": [
          "applicationNumber"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          },
          "systemCodes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetInteractionDataResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/GetInteractionDataResult"
          }
        }
      },
      "GetInteractionDataResult": {
        "required": [
          "applicationNumber"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          },
          "interactionData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InteractionData"
            }
          }
        }
      },
      "InteractionChain": {
        "required": [
          "date",
          "messageId",
          "messageType",
          "result"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "messageType": {
            "type": "string",
            "enum": [
              "REQUEST",
              "RESPONSE"
            ]
          },
          "messageId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "result": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "ERROR"
            ]
          },
          "errorTxt": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "contentType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        }
      },
      "InteractionData": {
        "required": [
          "correlationId",
          "serviceName",
          "systemDestinationCode",
          "systemSourceCode"
        ],
        "type": "object",
        "properties": {
          "correlationId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "systemSourceCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "systemDestinationCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "serviceName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "methodCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "interactionChain": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InteractionChain"
            }
          }
        }
      },
      "GetIntCreditHistoryRawRequest": {
        "required": [
          "participants"
        ],
        "type": "object",
        "properties": {
          "participants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "GetIntCreditHistoryRawResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/GetIntCreditHistoryRawResult"
          }
        }
      },
      "GetIntCreditHistoryRawResult": {
        "required": [
          "participants"
        ],
        "type": "object",
        "properties": {
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParticipantIntRawResult"
            }
          }
        }
      },
      "IntCreditHistoryRaw": {
        "required": [
          "amount",
          "contractNum",
          "creditRegistryUid",
          "currencyCode",
          "endDate",
          "lastPaymentDate",
          "mainOwedBalance",
          "monthlyPayment",
          "owedBalance",
          "rate",
          "roleCode",
          "startDate",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "subRequestId": {
            "type": "string",
            "format": "uuid"
          },
          "productTypeCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "paymentTypeCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntPayment"
            }
          },
          "bankName": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "bic": {
            "maxLength": 9,
            "minLength": 0,
            "type": "string"
          },
          "contractNum": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "statusCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "currencyCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "rate": {
            "type": "number"
          },
          "owedBalance": {
            "type": "number"
          },
          "monthlyPayment": {
            "type": "number"
          },
          "lastPaymentDate": {
            "type": "string",
            "format": "date"
          },
          "latePaymentDebt": {
            "type": "number"
          },
          "creditRegistryUid": {
            "maxLength": 38,
            "minLength": 0,
            "type": "string"
          },
          "mainOwedBalance": {
            "type": "number"
          },
          "latePaymentsLess29Count": {
            "type": "integer",
            "format": "int32"
          },
          "latePayments3059Count": {
            "type": "integer",
            "format": "int32"
          },
          "latePayments6089Count": {
            "type": "integer",
            "format": "int32"
          },
          "latePaymentsMore90Count": {
            "type": "integer",
            "format": "int32"
          },
          "roleCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "completeDtm": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IntPayment": {
        "required": [
          "paymentAmount",
          "paymentCurrencyCode",
          "paymentDate"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "paymentAmount": {
            "type": "number"
          },
          "paymentDate": {
            "type": "string",
            "format": "date"
          },
          "paymentCurrencyCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "ParticipantIntRawResult": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "creditHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntCreditHistoryRaw"
            }
          }
        }
      },
      "GetExtCreditHistoryRawRequest": {
        "required": [
          "participants"
        ],
        "type": "object",
        "properties": {
          "participants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "ExtCreditHistoryRaw": {
        "required": [
          "amount",
          "contractNum",
          "creditRegistryUid",
          "currencyCode",
          "endDate",
          "lastPaymentDate",
          "mainOwedBalance",
          "monthlyPayment",
          "owedBalance",
          "rate",
          "roleCode",
          "startDate",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "subRequestId": {
            "type": "string",
            "format": "uuid"
          },
          "loanTypeCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "bankName": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "bic": {
            "maxLength": 9,
            "minLength": 0,
            "type": "string"
          },
          "contractNum": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "statusCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "currencyCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "rate": {
            "type": "number"
          },
          "owedBalance": {
            "type": "number"
          },
          "monthlyPayment": {
            "type": "number"
          },
          "lastPaymentDate": {
            "type": "string",
            "format": "date"
          },
          "latePaymentDebt": {
            "type": "number"
          },
          "creditRegistryUid": {
            "maxLength": 38,
            "minLength": 0,
            "type": "string"
          },
          "mainOwedBalance": {
            "type": "number"
          },
          "latePaymentsLess29Count": {
            "type": "integer",
            "format": "int32"
          },
          "latePayments3059Count": {
            "type": "integer",
            "format": "int32"
          },
          "latePayments6089Count": {
            "type": "integer",
            "format": "int32"
          },
          "latePaymentsMore90Count": {
            "type": "integer",
            "format": "int32"
          },
          "roleCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "completeDtm": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GetExtCreditHistoryRawResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/GetExtCreditHistoryRawResult"
          }
        }
      },
      "GetExtCreditHistoryRawResult": {
        "required": [
          "participants"
        ],
        "type": "object",
        "properties": {
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParticipantExtRawResult"
            }
          }
        }
      },
      "ParticipantExtRawResult": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "creditHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtCreditHistoryRaw"
            }
          }
        }
      },
      "Payment": {
        "required": [
          "paymentAmount",
          "paymentCurrencyCode",
          "paymentDate"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "paymentAmount": {
            "type": "number"
          },
          "paymentDate": {
            "type": "string",
            "format": "date"
          },
          "paymentCurrencyCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "GetCreditHistoryFinalRequest": {
        "required": [
          "participants"
        ],
        "type": "object",
        "properties": {
          "participants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "CreditHistory": {
        "required": [
          "amount",
          "contractNum",
          "creditRegistryUid",
          "currencyCode",
          "endDate",
          "isExternal",
          "lastPaymentDate",
          "mainOwedBalance",
          "monthlyPayment",
          "owedBalance",
          "participantId",
          "rate",
          "roleCode",
          "startDate",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "participantId": {
            "type": "string",
            "format": "uuid"
          },
          "isExternal": {
            "type": "boolean"
          },
          "paymentTypeCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "loanTypeCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "productTypeCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "bankName": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "bic": {
            "maxLength": 9,
            "minLength": 0,
            "type": "string"
          },
          "contractNum": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "statusCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "currencyCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "rate": {
            "type": "number"
          },
          "owedBalance": {
            "type": "number"
          },
          "monthlyPayment": {
            "type": "number"
          },
          "lastPaymentDate": {
            "type": "string",
            "format": "date"
          },
          "latePaymentDebt": {
            "type": "number"
          },
          "creditRegistryUid": {
            "maxLength": 38,
            "minLength": 0,
            "type": "string"
          },
          "mainOwedBalance": {
            "type": "number"
          },
          "latePaymentsLess29Count": {
            "type": "integer",
            "format": "int32"
          },
          "latePayments3059Count": {
            "type": "integer",
            "format": "int32"
          },
          "latePayments6089Count": {
            "type": "integer",
            "format": "int32"
          },
          "latePaymentsMore90Count": {
            "type": "integer",
            "format": "int32"
          },
          "roleCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "completeDtm": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GetCreditHistoryFinalResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/GetCreditHistoryResult"
          }
        }
      },
      "GetCreditHistoryResult": {
        "required": [
          "participants"
        ],
        "type": "object",
        "properties": {
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParticipantResult"
            }
          }
        }
      },
      "ParticipantResult": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "creditHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditHistory"
            }
          }
        }
      },
      "GetBusinessEventsRequest": {
        "required": [
          "applicationNumber"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          }
        }
      },
      "BusinessEvent": {
        "type": "object",
        "properties": {
          "processes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessEvents"
            }
          }
        }
      },
      "Event": {
        "required": [
          "eventDateTime",
          "id",
          "processInstanceId",
          "processKey",
          "processVersion",
          "sourceActivityId",
          "sourceActivityStateCode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "processInstanceId": {
            "type": "string",
            "format": "uuid"
          },
          "processKey": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "processName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "processVersion": {
            "type": "integer",
            "format": "int32"
          },
          "sourceActivityId": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "sourceActivityName": {
            "type": "string"
          },
          "sourceActivityStateCode": {
            "type": "string"
          },
          "eventDateTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GetBusinessEventsResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/BusinessEvent"
          }
        }
      },
      "ProcessEvents": {
        "required": [
          "rootProcessId",
          "states"
        ],
        "type": "object",
        "properties": {
          "rootProcessId": {
            "type": "string",
            "format": "uuid"
          },
          "states": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateInfo"
            }
          }
        }
      },
      "StateInfo": {
        "required": [
          "events",
          "id",
          "stateDate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "statusCode": {
            "type": "string"
          },
          "statusDate": {
            "type": "string",
            "format": "date-time"
          },
          "stateDate": {
            "type": "string",
            "format": "date-time"
          },
          "employeeFullName": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      },
      "GetAccountsByParticipantIdRequest": {
        "required": [
          "participantId"
        ],
        "type": "object",
        "properties": {
          "participantId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "GetAccountsByParticipantIdResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/GetAccountsByParticipantIdResult"
          }
        }
      },
      "GetAccountsByParticipantIdResult": {
        "required": [
          "participantId"
        ],
        "type": "object",
        "properties": {
          "participantId": {
            "type": "string",
            "format": "uuid"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          }
        }
      },
      "GetAccountsByAppNumRequest": {
        "required": [
          "applicationNumber"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          }
        }
      },
      "GetAccountsByAppNumResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/GetAccountsByAppNumResult"
          }
        }
      },
      "GetAccountsByAppNumResult": {
        "required": [
          "applicationNumber"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParticipantAccount"
            }
          }
        }
      },
      "ParticipantAccount": {
        "required": [
          "classCode",
          "number",
          "participantId",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "number": {
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "currencyCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "classCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "typeCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "isNew": {
            "type": "boolean"
          },
          "balance": {
            "type": "number"
          },
          "participantId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CreateAccountRequest": {
        "required": [
          "applicationNumber",
          "participantId",
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "applicationNumber": {
            "type": "string"
          },
          "typeCode": {
            "type": "string"
          },
          "participantId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CreateAccountResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/CreateAccountResult"
          }
        }
      },
      "CreateAccountResult": {
        "required": [
          "account",
          "applicationNumber",
          "participantId"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          },
          "participantId": {
            "type": "string",
            "format": "uuid"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          }
        }
      },
      "Address": {
        "required": [
          "countryCode",
          "id",
          "modifyType",
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "modifyType": {
            "type": "string",
            "enum": [
              "CREATE",
              "UPDATE",
              "PATCH",
              "DELETE",
              "DELETE_ALL"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "typeCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "countryCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "regionType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "regionCode": {
            "type": "string"
          },
          "districtType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "district": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "cityType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "city": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "localityType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "locality": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "streetType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "street": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "house": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "housing": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "building": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "flat": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "isEqual": {
            "type": "boolean"
          },
          "temporaryRegEndDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "AppLoanUpdateRequest": {
        "required": [
          "application"
        ],
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Participant"
            }
          }
        }
      },
      "Consent": {
        "required": [
          "code",
          "id",
          "modifyType",
          "value"
        ],
        "type": "object",
        "properties": {
          "modifyType": {
            "type": "string",
            "enum": [
              "CREATE",
              "UPDATE",
              "PATCH",
              "DELETE",
              "DELETE_ALL"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "boolean"
          }
        }
      },
      "Contact": {
        "required": [
          "id",
          "modifyType",
          "typeCode",
          "value"
        ],
        "type": "object",
        "properties": {
          "modifyType": {
            "type": "string",
            "enum": [
              "CREATE",
              "UPDATE",
              "PATCH",
              "DELETE",
              "DELETE_ALL"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "typeCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "value": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "DetectedSign": {
        "required": [
          "id",
          "modifyType"
        ],
        "type": "object",
        "properties": {
          "modifyType": {
            "type": "string",
            "enum": [
              "CREATE",
              "UPDATE",
              "PATCH",
              "DELETE",
              "DELETE_ALL"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "visualAssessmentTypeCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "detectedSignCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "commentToType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "Employment": {
        "required": [
          "id",
          "modifyType"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "modifyType": {
            "type": "string",
            "enum": [
              "CREATE",
              "UPDATE",
              "PATCH",
              "DELETE",
              "DELETE_ALL"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "employmentCategoryCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "experience": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "positionName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "employerName": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "employerInn": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string"
          },
          "activityKindCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "website": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "employeesCount": {
            "type": "integer",
            "format": "int32"
          },
          "employerContacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "employerAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          }
        }
      },
      "FinDocument": {
        "required": [
          "id",
          "modifyType",
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "modifyType": {
            "type": "string",
            "enum": [
              "CREATE",
              "UPDATE",
              "PATCH",
              "DELETE",
              "DELETE_ALL"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "typeCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "number": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "taxRate": {
            "type": "number"
          }
        }
      },
      "IdentityDocument": {
        "required": [
          "id",
          "isPrevious",
          "modifyType",
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "modifyType": {
            "type": "string",
            "enum": [
              "CREATE",
              "UPDATE",
              "PATCH",
              "DELETE",
              "DELETE_ALL"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "typeCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "series": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "issueDate": {
            "type": "string",
            "format": "date"
          },
          "issuedBy": {
            "type": "string"
          },
          "departCode": {
            "type": "string"
          },
          "isPrevious": {
            "type": "boolean"
          }
        }
      },
      "Income": {
        "required": [
          "id",
          "modifyType",
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "modifyType": {
            "type": "string",
            "enum": [
              "CREATE",
              "UPDATE",
              "PATCH",
              "DELETE",
              "DELETE_ALL"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "typeCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "sourceCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "finDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinDocument"
            }
          },
          "incomePeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncomePeriod"
            }
          },
          "employment": {
            "$ref": "#/components/schemas/Employment"
          }
        }
      },
      "IncomePeriod": {
        "required": [
          "id",
          "modifyType",
          "number"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "modifyType": {
            "type": "string",
            "enum": [
              "CREATE",
              "UPDATE",
              "PATCH",
              "DELETE",
              "DELETE_ALL"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "amount": {
            "type": "number"
          }
        }
      },
      "LabourBook": {
        "required": [
          "id",
          "modifyType"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "modifyType": {
            "type": "string",
            "enum": [
              "CREATE",
              "UPDATE",
              "PATCH",
              "DELETE",
              "DELETE_ALL"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "series": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "number": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "issueDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "Participant": {
        "required": [
          "applicationNumber",
          "birthDate",
          "id",
          "identityDocuments",
          "modifyType",
          "name",
          "participantRoles",
          "surname"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "modifyType": {
            "type": "string",
            "enum": [
              "CREATE",
              "UPDATE",
              "PATCH",
              "DELETE",
              "DELETE_ALL"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "applicationNumber": {
            "type": "string"
          },
          "externalId": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "oid": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "patronymic": {
            "type": "string"
          },
          "genderCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date"
          },
          "birthPlace": {
            "type": "string"
          },
          "isNameChanged": {
            "type": "boolean"
          },
          "isDocumentChanged": {
            "type": "boolean"
          },
          "previousName": {
            "$ref": "#/components/schemas/PreviousName"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "incomes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Income"
            }
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "identityDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityDocument"
            }
          },
          "participantRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParticipantRole"
            }
          },
          "citizenshipCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "educationCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "maritalStatusCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "categoryCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "isSalaryClient": {
            "type": "boolean"
          },
          "childNumber": {
            "type": "integer",
            "format": "int32"
          },
          "snils": {
            "type": "string"
          },
          "hasThirdParty": {
            "type": "boolean"
          },
          "hasHisOwnFreeWill": {
            "type": "boolean"
          },
          "isPublicOfficial": {
            "type": "boolean"
          },
          "hasBeneficiary": {
            "type": "boolean"
          },
          "isForeignTaxPayer": {
            "type": "boolean"
          },
          "hasNegativeGoodwill": {
            "type": "boolean"
          },
          "consents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Consent"
            }
          },
          "visualAssessments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VisualAssessment"
            }
          },
          "labourBook": {
            "$ref": "#/components/schemas/LabourBook"
          },
          "isUSATaxPayer": {
            "type": "boolean"
          }
        }
      },
      "ParticipantRole": {
        "required": [
          "id",
          "modifyType",
          "roleCode"
        ],
        "type": "object",
        "properties": {
          "modifyType": {
            "type": "string",
            "enum": [
              "CREATE",
              "UPDATE",
              "PATCH",
              "DELETE",
              "DELETE_ALL"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "roleCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "PreviousName": {
        "required": [
          "id",
          "modifyType"
        ],
        "type": "object",
        "properties": {
          "modifyType": {
            "type": "string",
            "enum": [
              "CREATE",
              "UPDATE",
              "PATCH",
              "DELETE",
              "DELETE_ALL"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "surname": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "patronymic": {
            "type": "string"
          }
        }
      },
      "VisualAssessment": {
        "required": [
          "id",
          "modifyType",
          "negativeSign",
          "objectTypeCode"
        ],
        "type": "object",
        "properties": {
          "modifyType": {
            "type": "string",
            "enum": [
              "CREATE",
              "UPDATE",
              "PATCH",
              "DELETE",
              "DELETE_ALL"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "objectTypeCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "commentToObject": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "assessmentDate": {
            "type": "string",
            "format": "date"
          },
          "negativeSign": {
            "type": "boolean"
          },
          "detectedSigns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DetectedSign"
            }
          }
        }
      },
      "AppLoanUpdateResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/AppLoanUpdateResult"
          }
        }
      },
      "AppLoanUpdateResult": {
        "required": [
          "application"
        ],
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Participant"
            }
          }
        }
      },
      "AppLoanTransferringRequest": {
        "required": [
          "applicationNumber",
          "source"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/Source"
          }
        }
      },
      "AppLoanTransferringResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/AppLoanTransferringResult"
          }
        }
      },
      "AppLoanTransferringResult": {
        "required": [
          "applicationNumber",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          }
        }
      },
      "AppLoanSigningRequest": {
        "required": [
          "applicationNumber",
          "source"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/Source"
          }
        }
      },
      "AppLoanSigningResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/AppLoanSigningResult"
          }
        }
      },
      "AppLoanSigningResult": {
        "required": [
          "applicationNumber",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          }
        }
      },
      "AppLoanProcessingRequest": {
        "required": [
          "applicationNumber",
          "source"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/Source"
          }
        }
      },
      "AppLoanProcessingResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/AppLoanProcessingResult"
          }
        }
      },
      "AppLoanProcessingResult": {
        "required": [
          "applicationNumber",
          "decisionTypeCode",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "decisionTypeCode": {
            "type": "string"
          }
        }
      },
      "AppLoanListRequest": {
        "required": [
          "filters"
        ],
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Filter"
            }
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          }
        }
      },
      "Filter": {
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "participant": {
            "$ref": "#/components/schemas/Participant"
          }
        }
      },
      "Page": {
        "required": [
          "pageNumber",
          "pageSize"
        ],
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "maximum": 100,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Sort": {
        "required": [
          "sortField",
          "sortType"
        ],
        "type": "object",
        "properties": {
          "sortType": {
            "type": "string"
          },
          "sortField": {
            "type": "string"
          }
        }
      },
      "AppLoanListResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/AppLoanListResult"
          }
        }
      },
      "AppLoanListResult": {
        "required": [
          "page"
        ],
        "type": "object",
        "properties": {
          "applicationSearchResult": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationSearchResult"
            }
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "ApplicationSearchResult": {
        "required": [
          "application",
          "participants"
        ],
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Participant"
            }
          }
        }
      },
      "AppLoanGetRequest": {
        "required": [
          "applicationNumber"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          }
        }
      },
      "AppLoanGetResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/AppLoanGetResult"
          }
        }
      },
      "AppLoanGetResult": {
        "required": [
          "application",
          "participants"
        ],
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Participant"
            }
          }
        }
      },
      "AppLoanDeclineRequest": {
        "required": [
          "application"
        ],
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/Application"
          }
        }
      },
      "AppLoanDeclineResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "AppLoanCreateRequest": {
        "required": [
          "application",
          "participants"
        ],
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Participant"
            }
          }
        }
      },
      "AppLoanCreateResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/AppLoanCreateResult"
          }
        }
      },
      "AppLoanCreateResult": {
        "required": [
          "application",
          "participants"
        ],
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Participant"
            }
          }
        }
      },
      "AppLoanAuditGetRequest": {
        "required": [
          "applicationNumber"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          }
        }
      },
      "AppLoanAuditGetResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error",
              "warning"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "data": {
            "$ref": "#/components/schemas/AppLoanAuditGetResult"
          }
        }
      },
      "AppLoanAuditGetResult": {
        "required": [
          "application",
          "participants"
        ],
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Participant"
            }
          }
        }
      },
      "ColumnMetaInfo": {
        "required": [
          "required",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Тип значения атрибута в столбце",
            "enum": [
              "STRING",
              "BOOLEAN",
              "NUMBER"
            ]
          },
          "required": {
            "type": "boolean",
            "description": "Признак обязательного заполнения"
          },
          "defaultValue": {
            "type": "object",
            "description": "Значение по-умолчанию"
          },
          "uniqueIndex": {
            "type": "boolean",
            "description": "Признак ключевого атрибута для идексации кода записи"
          }
        },
        "description": "Метаинформация по атрибутам справочника"
      },
      "Dictionary": {
        "required": [
          "dictionaryCode",
          "dictionaryName",
          "dictionaryType",
          "records",
          "structure"
        ],
        "type": "object",
        "properties": {
          "dictionaryCode": {
            "type": "string",
            "description": "Код справочника"
          },
          "dictionaryType": {
            "type": "string",
            "description": "Тип справочника",
            "enum": [
              "INTERNAL",
              "EXTERNAL",
              "BUSINESS"
            ]
          },
          "dictionaryName": {
            "type": "string",
            "description": "Наименование справочника"
          },
          "structure": {
            "$ref": "#/components/schemas/DictionaryStructure"
          },
          "records": {
            "type": "array",
            "description": "Список записей справочника",
            "items": {
              "$ref": "#/components/schemas/Record"
            }
          }
        },
        "description": "Модель описания справочника"
      },
      "DictionaryStructure": {
        "required": [
          "columns"
        ],
        "type": "object",
        "properties": {
          "columns": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ColumnMetaInfo"
            },
            "description": "Описание структуры полей справочника в формате ключ-значение"
          }
        },
        "description": "Структура справочника в формате JSON"
      },
      "Record": {
        "required": [
          "content",
          "id",
          "recordCode",
          "startDateTime"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Содержимое справочника в соответствии с заданной структурой"
            },
            "description": "Содержимое справочника в соответствии с заданной структурой"
          },
          "startDateTime": {
            "type": "string",
            "description": "Дата начала действия записи",
            "format": "date-time"
          },
          "expirationDateTime": {
            "type": "string",
            "description": "Дата окончания действия записи",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор записи",
            "format": "uuid"
          },
          "recordCode": {
            "type": "string",
            "description": "Код записи"
          }
        },
        "description": "Модель описания записи"
      }
    },
    "securitySchemes": {
      "Internal-Token": {
        "type": "apiKey",
        "name": "SERVICE_ACCESS_TOKEN",
        "in": "header"
      }
    }
  }
}